`timescale 1ns / 1ps



module new_tb_puf;

    // Testbench signals
    reg en;
    reg [0:7] challenge;
    reg clk;
    reg reset;
    wire out;
    
    // Internal signals for observing counts
    wire [0:15] counter_output1_tb;
    wire [0:15] counter_output2_tb;

    // DUT instance
    one_bit_PUF uut (
        .en(en),
        .challenge(challenge),
        .out(out),
        .clk(clk),
        .reset(reset)
    );

    // Clock generation: 10 ns period => 100 MHz clock
    initial begin
        clk = 0;
        forever #1 clk = ~clk;
    end
    
    // Apply stimulus
    initial begin
        // Initialize inputs
        en = 0;
        reset = 1;
        
        #20;
        reset = 0;
        en = 1;
     end
     
     initial begin
        #20;
        challenge = 8'b10101010;
        #200;
//        #100 challenge = 8'b11110000;
//        #100 challenge = 8'b00001111;
//        #100 challenge = 8'b11001100;

    end
    
    // Monitor signals
    initial begin
        $monitor("Time=%0t | en=%b | reset=%b | challenge=%b | counter1=%d | counter2=%d | out=%b", 
            $time, en, reset, challenge, uut.counter_output1, uut.counter_output2, out);
            
        #220;
        $display("Timeeee=%0t | en=%b | reset=%b | challenge=%b | counter1=%d | counter2=%d | out=%b", 
            $time, en, reset, challenge, uut.counter_output1, uut.counter_output2, out);
        $finish;
    end

endmodule
